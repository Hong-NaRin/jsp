/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.25
 * Generated at: 2024-07-30 08:10:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.kkodamkkodam.user.model.UserDTO;

public final class post_005fview_005fcode_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.0.jar", Long.valueOf(1722237371349L));
    _jspx_dependants.put("jar:file:/C:/Users/user/Desktop/course/jsp/apache-tomcat-10.1.25/wtpwebapps/kkodamkkodam/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.0.jar!/META-INF/c-1_2.tld", Long.valueOf(1649403498000L));
    _jspx_dependants.put("/board/../include/header.jsp", Long.valueOf(1722323054969L));
    _jspx_dependants.put("/board/../include/footer.jsp", Long.valueOf(1722323054968L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.kkodamkkodam.user.model.UserDTO");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>꼬담꼬담</title>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/bootstrap.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/default.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/header.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/footer.css\">\r\n");
      out.write("<!--highlight Start  -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.2.0/styles/default.min.css\">\r\n");
      out.write("<!-- 구문 강조 CSS호출 -->\r\n");
      out.write("<script\r\n");
      out.write("	src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.2.0/highlight.min.js\"></script>\r\n");
      out.write("<!-- 구문 강조 js 호출 -->\r\n");
      out.write("<script>\r\n");
      out.write("	hljs.highlightAll();\r\n");
      out.write("</script>\r\n");
      out.write("<!-- 코드 구문 강조 호출 -->\r\n");
      out.write("<!--highlight End  -->\r\n");
      out.write("<script\r\n");
      out.write("	src=\"//cdnjs.cloudflare.com/ajax/libs/highlightjs-line-numbers.js/2.8.0/highlightjs-line-numbers.min.js\"></script>\r\n");
      out.write("<!-- 코드 줄넘버 js -->\r\n");
      out.write("<script>\r\n");
      out.write("	hljs.initLineNumbersOnLoad();\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<!--폰트어썸-->\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/79986a0df7.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header class=\"header\">\r\n");
      out.write("		<div class=\"logo\">\r\n");
      out.write("			<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/logo.png\" alt=\"로고\" onclick=\"home()\">\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"header-menu\">\r\n");
      out.write("			<button type=\"button\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/postList.board?boardId=1'\" class=\"menu-btn\">자유\r\n");
      out.write("				게시판</button>\r\n");
      out.write("			<button type=\"button\" onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/postList.board?boardId=2'\" class=\"menu-btn\">질문\r\n");
      out.write("				게시판</button>\r\n");
      out.write("                <button type=\"button\"  onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/postList.board?boardId=3'\" class=\"menu-btn\">코드 리뷰</button>\r\n");
      out.write("                <button type=\"button\"  onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/postList.board?boardId=4'\" class=\"menu-btn\">정보 공유</button>\r\n");
      out.write("			<div class=\"dropdown drop-btn\">\r\n");
      out.write("				<button type=\"button\" class=\"menu-btn dropdown-toggle\"\r\n");
      out.write("					data-toggle=\"dropdown\">미니 게시판</button>\r\n");
      out.write("				<!-- ----------------------------------------------------------- -->\r\n");
      out.write("				<ul class=\"dropdown-menu drop-menu\">\r\n");
      out.write("					<li><a class=\"dropdown-item drop-list\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/post_write_mini.jsp\">개설 신청</a></li>\r\n");
      out.write("					<li><a class=\"dropdown-item drop-list\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/postMiniList.board\">개설 신청 목록</a></li>\r\n");
      out.write("					<li><a class=\"dropdown-item drop-list\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/mini.jsp\">게시판 전체보기</a></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		 <!-- 로그인 유무에 따라 변하는 버튼 -->\r\n");
      out.write("		 ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("	</header>\r\n");
      out.write("	<div class=\"empty\"></div>\r\n");
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		var uri = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.requestURI}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("		var pages = uri.split('/');\r\n");
      out.write("		var page = pages[pages.length - 1];\r\n");
      out.write("		var cssFile = page.substring(0, page.length - 3);\r\n");
      out.write("		var folder = pages[pages.length - 2];\r\n");
      out.write("		var link = document.createElement(\"link\");\r\n");
      out.write("		link.rel = \"stylesheet\";\r\n");
      out.write("		link.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/\"\r\n");
      out.write("				+ cssFile + \"css\";\r\n");
      out.write("	\r\n");
      out.write("		document.querySelector(\"head\").appendChild(link);\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		<@ if (request.getAttribute(\"error\") != null) { %>\r\n");
      out.write("			alert('<@ request.getAttribute(\"error\") @>');\r\n");
      out.write("		<@ } @>	\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		function home() {\r\n");
      out.write("			location.href = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/index.jsp'\r\n");
      out.write("		}\r\n");
      out.write("	</script>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div id=\"wrapped\">\r\n");
      out.write("        <div class=\"board-type\">\r\n");
      out.write("            <p>게시판 종류</p>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"post\">\r\n");
      out.write("            <div class=\"user-bigbox\">\r\n");
      out.write("                <img src=\"../resources/img/userCircle.png\" alt=\"userCircle\" style=\"width: 45px;\">\r\n");
      out.write("                <div class=\"user-box\">\r\n");
      out.write("                    <div class=\"user\">\r\n");
      out.write("                        <p>익명</p>\r\n");
      out.write("                        <p>10분전</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div> \r\n");
      out.write("            \r\n");
      out.write("            <h3>출력은 잘 나오는데 계속 채점이 안되네요</h3>\r\n");
      out.write("            <p class=\"post-content\">\r\n");
      out.write("                testcase들은 다 통과하는데 채점에서 뭐가 문제인지 알려주시면 감사하겠습니다.\r\n");
      out.write("            </p>\r\n");
      out.write("            <pre><code class=\"language-java codebox\">import java.io.*;\r\n");
      out.write("import java.util.*;\r\n");
      out.write("public class BJ26142 {\r\n");
      out.write("    public static void main(String[] args) throws IOException {\r\n");
      out.write("        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n");
      out.write("        int N = Integer.parseInt(br.readLine());\r\n");
      out.write("        int[] D = new int[N];\r\n");
      out.write("        long[] H = new long[N];\r\n");
      out.write("        for (int i = 0; i < N; i++) {\r\n");
      out.write("            StringTokenizer st = new StringTokenizer(br.readLine());\r\n");
      out.write("            D[i] = Integer.parseInt(st.nextToken());\r\n");
      out.write("            H[i] = Long.parseLong(st.nextToken());\r\n");
      out.write("        }\r\n");
      out.write("        long[] heights = new long[N];\r\n");
      out.write("        for (int i = 0; i < N; i++) {\r\n");
      out.write("            heights[i] = H[i];\r\n");
      out.write("        }\r\n");
      out.write("                \r\n");
      out.write("        long cumulativeSum = 0;\r\n");
      out.write("        for (int k = 1; k <= N; k++) {\r\n");
      out.write("        // 현재 높이를 기준으로 maxHeap 초기화\r\n");
      out.write("            PriorityQueue<Long> maxHeap = new PriorityQueue<>(Collections.reverseOrder());\r\n");
      out.write("            for (int i = 0; i < N; i++) {\r\n");
      out.write("                maxHeap.add(heights[i]);\r\n");
      out.write("            }\r\n");
      out.write("                \r\n");
      out.write("            // 도둑이 최대 높이의 드래곤을 쏘는 경우\r\n");
      out.write("            long maxCut = maxHeap.poll();\r\n");
      out.write("            cumulativeSum += maxCut;\r\n");
      out.write("            System.out.println(cumulativeSum);\r\n");
      out.write("            // maxCut 높이를 가진 드래곤 찾기\r\n");
      out.write("            for (int i = 0; i < N; i++) {\r\n");
      out.write("                if (heights[i] == maxCut) {\r\n");
      out.write("                    heights[i] = 0; // 높이를 0으로 설정\r\n");
      out.write("                    break;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            // heights 배열을 내림차순으로 정렬하여 다음 날을 준비\r\n");
      out.write("            Long[] heightsWrapper = Arrays.stream(heights).boxed().toArray(Long[]::new);\r\n");
      out.write("            Arrays.sort(heightsWrapper, Collections.reverseOrder());\r\n");
      out.write("            heights = Arrays.stream(heightsWrapper).mapToLong(Long::longValue).toArray();\r\n");
      out.write("                \r\n");
      out.write("            // 모든 드래곤의 키를 D[i]만큼 증가\r\n");
      out.write("            for (int i = 0; i < N; i++) {\r\n");
      out.write("                heights[i] += D[i];\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        br.close();\r\n");
      out.write("    }\r\n");
      out.write("}</code></pre>\r\n");
      out.write("            <div class=\"post-info\">\r\n");
      out.write("                <span class=\"icon\" >\r\n");
      out.write("                    <span class=\"material-symbols-outlined\" style=\"font-size:18px;\">\r\n");
      out.write("                        visibility\r\n");
      out.write("                        </span>\r\n");
      out.write("                </span>\r\n");
      out.write("                <span class=\"num\">2000</span>\r\n");
      out.write("                <span class=\"icon\" >\r\n");
      out.write("                    <span class=\"material-symbols-outlined\" style=\"font-size:18px;\">\r\n");
      out.write("                        thumb_up\r\n");
      out.write("                        </span>\r\n");
      out.write("                </span>\r\n");
      out.write("                <span class=\"num\">2</span>\r\n");
      out.write("                <span class=\"icon\" >\r\n");
      out.write("                    <span class=\"material-symbols-outlined\" style=\"font-size:18px;\">\r\n");
      out.write("                        chat\r\n");
      out.write("                        </span>\r\n");
      out.write("                </span>\r\n");
      out.write("                <span class=\"num\">2</span>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div> \r\n");
      out.write("        <div class=\"comment-bigbox\">\r\n");
      out.write("            <span class=\"comment-input\">\r\n");
      out.write("                <input type=\"text\"></input>\r\n");
      out.write("                <button><span class=\"material-symbols-outlined\" style=\"font-size:18px;\"> edit</span></button>\r\n");
      out.write("            </span>\r\n");
      out.write("            <div class=\"comment-box\">\r\n");
      out.write("                <div class=\"comment\">\r\n");
      out.write("                    <div class=\"user-bigbox\">\r\n");
      out.write("                        <img src=\"../resources/img/userCircle.png\" alt=\"userCircle\" style=\"width: 45px;\">\r\n");
      out.write("                        <div class=\"user-box\">\r\n");
      out.write("                            <div class=\"user\">\r\n");
      out.write("                                <p>익명</p>\r\n");
      out.write("                                <p>10분전</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <p class=\"comment-content\">\r\n");
      out.write("                        가가가가가가가가각\r\n");
      out.write("                    </p>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"comment reply\">\r\n");
      out.write("                    <div class=\"user-bigbox\">\r\n");
      out.write("                        <img src=\"../resources/img/userCircle.png\" alt=\"userCircle\" style=\"width: 45px;\">\r\n");
      out.write("                        <div class=\"user-box\">\r\n");
      out.write("                            <div class=\"user\">\r\n");
      out.write("                                <p>익명 <span>작성자</span></p>\r\n");
      out.write("                                <p>10분전</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <p class=\"comment-content\">\r\n");
      out.write("                        나나나나나나나나나나나나나나나나나나나나나나나\r\n");
      out.write("                    </p>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"comment reply\">\r\n");
      out.write("                    <div class=\"user-bigbox\">\r\n");
      out.write("                        <img src=\"../resources/img/userCircle.png\" alt=\"userCircle\" style=\"width: 45px;\">\r\n");
      out.write("                        <div class=\"user-box\">\r\n");
      out.write("                            <div class=\"user\">\r\n");
      out.write("                                <p>익명 <span>작성자</span></p>\r\n");
      out.write("                                <p>10분전</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <p class=\"comment-content\">\r\n");
      out.write("                        나나나나나나나나나나나나나나나나나나나나나나나\r\n");
      out.write("                    </p>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"comment\">\r\n");
      out.write("                    <div class=\"user-bigbox\">\r\n");
      out.write("                        <img src=\"../resources/img/userCircle.png\" alt=\"userCircle\" style=\"width: 45px;\">\r\n");
      out.write("                        <div class=\"user-box\">\r\n");
      out.write("                            <div class=\"user\">\r\n");
      out.write("                                <p>익명</p>\r\n");
      out.write("                                <p>10분전</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <p class=\"comment-content\">\r\n");
      out.write("                        가가가가가가가가가                    \r\n");
      out.write("                    </p>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"comment\">\r\n");
      out.write("                    <div class=\"user-bigbox\">\r\n");
      out.write("                        <img src=\"../resources/img/userCircle.png\" alt=\"userCircle\" style=\"width: 45px;\">\r\n");
      out.write("                        <div class=\"user-box\">\r\n");
      out.write("                            <div class=\"user\">\r\n");
      out.write("                                <p>익명</p>\r\n");
      out.write("                                <p>10분전</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <p class=\"comment-content\">\r\n");
      out.write("                        가가가가가가가가가\r\n");
      out.write("                    </p>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<footer>\r\n");
      out.write("	<div class=\"footer-box\">\r\n");
      out.write("		<div class=\"footer-list\">\r\n");
      out.write("			<a href=\"https://policy.naver.com/policy/privacy.html\">개인정보처리방침 |</a> <a href=\"https://policy.naver.com/policy/service.html\">이용약관 |</a> <a href=\"https://policy.naver.com/policy/disclaimer.html\">책임의\r\n");
      out.write("				한계와 법적고지 |</a> <a href=\"https://policy.naver.com/policy/youthpolicy.html\">청소년 보호정책</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<p>Copyright ©2024 Project 1st Line. All Rights Reserved.</p>\r\n");
      out.write("	</div>\r\n");
      out.write("</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("           	");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write(" \r\n");
          out.write("            ");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("         ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /board/../include/header.jsp(72,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.user == null}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				<div class=\"right-btn\">\r\n");
          out.write("					<button type=\"button\" onclick=\"location.href = '");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/user/join.user'\" class=\"btn-join\">회원가입</button>\r\n");
          out.write("					<button type=\"button\" onclick=\"location.href = '");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/user/login.user'\" class=\"btn-login\">로그인</button>\r\n");
          out.write("				</div>\r\n");
          out.write("           	");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				<div class=\"user-btn\">\r\n");
          out.write("           			<div class=\"dropdown drop-btn\">\r\n");
          out.write("						<button type=\"button\" class=\"dropdown-toggle btn-my\" data-toggle=\"dropdown\">내 정보</button>\r\n");
          out.write("						<ul class=\"dropdown-menu drop-menu2\" style=\"min-width: 65px;\">\r\n");
          out.write("							<li><a class=\"dropdown-item drop-list2\" href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/user/modify.user\">정보 수정</a></li>\r\n");
          out.write("							<li><a class=\"dropdown-item drop-list2\" href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/board/mypage.board\">활동 로그</a></li>\r\n");
          out.write("							<li><a class=\"dropdown-item drop-list2\" href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/user/delete.user\">회원 탈퇴</a></li>\r\n");
          out.write("						</ul>\r\n");
          out.write("					</div>			\r\n");
          out.write("           			 <button type=\"button\" onclick=\"location.href = '");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/user/logout.user'\" class=\"btn-logout\">로그아웃</button>\r\n");
          out.write("				</div>\r\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
